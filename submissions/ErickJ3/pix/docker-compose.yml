services:
  pgsql:
    image: postgres:latest
    container_name: payouts-pgsql
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'pix'
      TZ: 'UTC'
    ports:
      - '5858:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - payouts-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d pix"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.1-alpine
    container_name: payouts-redis
    ports:
      - '6767:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    command: 'redis-server --save 120 1 --loglevel warning'
    networks:
      - payouts-net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: payouts-app
    environment:
      DATABASE_URL: postgres://user:password@pgsql:5432/pix
      REDIS_URL: redis://redis:6379
      RUST_LOG: info
      WORKER_COUNT: 2
      HTTP_ADDR: 0.0.0.0:8080
    ports:
      - '8080:8080'
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - payouts-net
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  payouts-net:
    name: payouts-net
    driver: bridge